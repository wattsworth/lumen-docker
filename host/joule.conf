# modify the proxy_pass directives match your Joule configuration.
# When running Joule in a Docker container, this should be something like
# http://127.0.0.1:<port>, when running on the host OS this should use the 
# UNIX socket for faster performance (the default configuration)

location /joule/ {
    proxy_pass http://unix:/tmp/joule/api:/;
    proxy_set_header X-Auth-Required "true";
    proxy_http_version 1.1;
    proxy_buffering off;
    proxy_request_buffering off;
    client_max_body_size 0;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Api-Port $server_port;
    proxy_set_header X-Api-Scheme $scheme;
    proxy_set_header X-Api-Base-Uri "/joule";
}
# Do not proxy this path
# This route lists all active data apps
location /joule/app.json {
    proxy_pass http://unix:/tmp/joule/api:/app.json;
    proxy_set_header X-Auth-Required "true";
}
# Reverse proxy for data apps
location /joule/app {
    auth_request /proxy;
    auth_request_set $proxy_url $upstream_http_x_proxy_path;
    proxy_pass $proxy_url$joule_proxy_uri?$args;
    proxy_http_version 1.1;
    proxy_buffering off;
    # $Host will be app.<server_name>, may be needed by some 
    # applications when hosted behind a proxy
    proxy_set_header Host $app_hostname;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
}
# Proxy authorization
location = /proxy {
    internal;
    proxy_pass  http://unix:/tmp/joule/api:/app/auth;
    proxy_pass_request_body off;
    proxy_set_header Content-Length "";
    proxy_set_header X-App-Id $joule_proxy_id;
    proxy_set_header X-Auth-Required "true";
}